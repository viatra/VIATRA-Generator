<?xml version="1.0" encoding="UTF-8"?><plugin>
  <extension id="ca.mcgill.ecse.dslreasoner.vampire.reasoner.queries.VampireQueries" point="org.eclipse.viatra.query.runtime.queryspecification">
    <group group="org.eclipse.viatra.query.runtime.extensibility.SingletonExtensionFactory:ca.mcgill.ecse.dslreasoner.vampire.reasoner.queries.VampireQueries" id="ca.mcgill.ecse.dslreasoner.vampire.reasoner.queries.VampireQueries">
      <query-specification fqn="ca.mcgill.ecse.dslreasoner.vampire.reasoner.queries.VLSComment"/>
      <query-specification fqn="ca.mcgill.ecse.dslreasoner.vampire.reasoner.queries.VLSFofFormula"/>
      <query-specification fqn="ca.mcgill.ecse.dslreasoner.vampire.reasoner.queries.VLSAnnotation"/>
      <query-specification fqn="ca.mcgill.ecse.dslreasoner.vampire.reasoner.queries.VLSOr"/>
      <query-specification fqn="ca.mcgill.ecse.dslreasoner.vampire.reasoner.queries.VLSAnd"/>
      <query-specification fqn="ca.mcgill.ecse.dslreasoner.vampire.reasoner.queries.VLSEquivalent"/>
      <query-specification fqn="ca.mcgill.ecse.dslreasoner.vampire.reasoner.queries.VLSFunction"/>
      <query-specification fqn="ca.mcgill.ecse.dslreasoner.vampire.reasoner.queries.VLSExistentialQuantifier"/>
      <query-specification fqn="ca.mcgill.ecse.dslreasoner.vampire.reasoner.queries.VLSUniversalQuantifier"/>
      <query-specification fqn="ca.mcgill.ecse.dslreasoner.vampire.reasoner.queries.VLSUnaryNegation"/>
      <query-specification fqn="ca.mcgill.ecse.dslreasoner.vampire.reasoner.queries.VLSInequality"/>
      <query-specification fqn="ca.mcgill.ecse.dslreasoner.vampire.reasoner.queries.VLSFunctionFof"/>
    </group>
  </extension>
</plugin>
