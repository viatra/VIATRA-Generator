/**
 * generated by Xtext 2.14.0
 */
package ca.mcgill.ecse.dslreasoner.vampireLanguage.impl;

import ca.mcgill.ecse.dslreasoner.vampireLanguage.VLSComment;
import ca.mcgill.ecse.dslreasoner.vampireLanguage.VLSConfirmations;
import ca.mcgill.ecse.dslreasoner.vampireLanguage.VLSFofFormula;
import ca.mcgill.ecse.dslreasoner.vampireLanguage.VLSTffFormula;
import ca.mcgill.ecse.dslreasoner.vampireLanguage.VampireLanguagePackage;
import ca.mcgill.ecse.dslreasoner.vampireLanguage.VampireModel;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Vampire Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ca.mcgill.ecse.dslreasoner.vampireLanguage.impl.VampireModelImpl#getComments <em>Comments</em>}</li>
 *   <li>{@link ca.mcgill.ecse.dslreasoner.vampireLanguage.impl.VampireModelImpl#getConfirmations <em>Confirmations</em>}</li>
 *   <li>{@link ca.mcgill.ecse.dslreasoner.vampireLanguage.impl.VampireModelImpl#getFormulas <em>Formulas</em>}</li>
 *   <li>{@link ca.mcgill.ecse.dslreasoner.vampireLanguage.impl.VampireModelImpl#getTfformulas <em>Tfformulas</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VampireModelImpl extends MinimalEObjectImpl.Container implements VampireModel
{
  /**
   * The cached value of the '{@link #getComments() <em>Comments</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComments()
   * @generated
   * @ordered
   */
  protected EList<VLSComment> comments;

  /**
   * The cached value of the '{@link #getConfirmations() <em>Confirmations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConfirmations()
   * @generated
   * @ordered
   */
  protected EList<VLSConfirmations> confirmations;

  /**
   * The cached value of the '{@link #getFormulas() <em>Formulas</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFormulas()
   * @generated
   * @ordered
   */
  protected EList<VLSFofFormula> formulas;

  /**
   * The cached value of the '{@link #getTfformulas() <em>Tfformulas</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTfformulas()
   * @generated
   * @ordered
   */
  protected EList<VLSTffFormula> tfformulas;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VampireModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return VampireLanguagePackage.Literals.VAMPIRE_MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<VLSComment> getComments()
  {
    if (comments == null)
    {
      comments = new EObjectContainmentEList<VLSComment>(VLSComment.class, this, VampireLanguagePackage.VAMPIRE_MODEL__COMMENTS);
    }
    return comments;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<VLSConfirmations> getConfirmations()
  {
    if (confirmations == null)
    {
      confirmations = new EObjectContainmentEList<VLSConfirmations>(VLSConfirmations.class, this, VampireLanguagePackage.VAMPIRE_MODEL__CONFIRMATIONS);
    }
    return confirmations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<VLSFofFormula> getFormulas()
  {
    if (formulas == null)
    {
      formulas = new EObjectContainmentEList<VLSFofFormula>(VLSFofFormula.class, this, VampireLanguagePackage.VAMPIRE_MODEL__FORMULAS);
    }
    return formulas;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<VLSTffFormula> getTfformulas()
  {
    if (tfformulas == null)
    {
      tfformulas = new EObjectContainmentEList<VLSTffFormula>(VLSTffFormula.class, this, VampireLanguagePackage.VAMPIRE_MODEL__TFFORMULAS);
    }
    return tfformulas;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case VampireLanguagePackage.VAMPIRE_MODEL__COMMENTS:
        return ((InternalEList<?>)getComments()).basicRemove(otherEnd, msgs);
      case VampireLanguagePackage.VAMPIRE_MODEL__CONFIRMATIONS:
        return ((InternalEList<?>)getConfirmations()).basicRemove(otherEnd, msgs);
      case VampireLanguagePackage.VAMPIRE_MODEL__FORMULAS:
        return ((InternalEList<?>)getFormulas()).basicRemove(otherEnd, msgs);
      case VampireLanguagePackage.VAMPIRE_MODEL__TFFORMULAS:
        return ((InternalEList<?>)getTfformulas()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case VampireLanguagePackage.VAMPIRE_MODEL__COMMENTS:
        return getComments();
      case VampireLanguagePackage.VAMPIRE_MODEL__CONFIRMATIONS:
        return getConfirmations();
      case VampireLanguagePackage.VAMPIRE_MODEL__FORMULAS:
        return getFormulas();
      case VampireLanguagePackage.VAMPIRE_MODEL__TFFORMULAS:
        return getTfformulas();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case VampireLanguagePackage.VAMPIRE_MODEL__COMMENTS:
        getComments().clear();
        getComments().addAll((Collection<? extends VLSComment>)newValue);
        return;
      case VampireLanguagePackage.VAMPIRE_MODEL__CONFIRMATIONS:
        getConfirmations().clear();
        getConfirmations().addAll((Collection<? extends VLSConfirmations>)newValue);
        return;
      case VampireLanguagePackage.VAMPIRE_MODEL__FORMULAS:
        getFormulas().clear();
        getFormulas().addAll((Collection<? extends VLSFofFormula>)newValue);
        return;
      case VampireLanguagePackage.VAMPIRE_MODEL__TFFORMULAS:
        getTfformulas().clear();
        getTfformulas().addAll((Collection<? extends VLSTffFormula>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case VampireLanguagePackage.VAMPIRE_MODEL__COMMENTS:
        getComments().clear();
        return;
      case VampireLanguagePackage.VAMPIRE_MODEL__CONFIRMATIONS:
        getConfirmations().clear();
        return;
      case VampireLanguagePackage.VAMPIRE_MODEL__FORMULAS:
        getFormulas().clear();
        return;
      case VampireLanguagePackage.VAMPIRE_MODEL__TFFORMULAS:
        getTfformulas().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case VampireLanguagePackage.VAMPIRE_MODEL__COMMENTS:
        return comments != null && !comments.isEmpty();
      case VampireLanguagePackage.VAMPIRE_MODEL__CONFIRMATIONS:
        return confirmations != null && !confirmations.isEmpty();
      case VampireLanguagePackage.VAMPIRE_MODEL__FORMULAS:
        return formulas != null && !formulas.isEmpty();
      case VampireLanguagePackage.VAMPIRE_MODEL__TFFORMULAS:
        return tfformulas != null && !tfformulas.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //VampireModelImpl
