/**
 * generated by Xtext 2.21.0
 */
package hu.bme.mit.inf.dslreasoner.application.applicationConfiguration.util;

import hu.bme.mit.inf.dslreasoner.application.applicationConfiguration.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see hu.bme.mit.inf.dslreasoner.application.applicationConfiguration.ApplicationConfigurationPackage
 * @generated
 */
public class ApplicationConfigurationSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static ApplicationConfigurationPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ApplicationConfigurationSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = ApplicationConfigurationPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case ApplicationConfigurationPackage.CONFIGURATION_SCRIPT:
      {
        ConfigurationScript configurationScript = (ConfigurationScript)theEObject;
        T result = caseConfigurationScript(configurationScript);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.COMMAND:
      {
        Command command = (Command)theEObject;
        T result = caseCommand(command);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.IMPORT:
      {
        Import import_ = (Import)theEObject;
        T result = caseImport(import_);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.EPACKAGE_IMPORT:
      {
        EPackageImport ePackageImport = (EPackageImport)theEObject;
        T result = caseEPackageImport(ePackageImport);
        if (result == null) result = caseImport(ePackageImport);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.VIATRA_IMPORT:
      {
        ViatraImport viatraImport = (ViatraImport)theEObject;
        T result = caseViatraImport(viatraImport);
        if (result == null) result = caseImport(viatraImport);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.DECLARATION:
      {
        Declaration declaration = (Declaration)theEObject;
        T result = caseDeclaration(declaration);
        if (result == null) result = caseCommand(declaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.FILE_SPECIFICATION:
      {
        FileSpecification fileSpecification = (FileSpecification)theEObject;
        T result = caseFileSpecification(fileSpecification);
        if (result == null) result = caseFile(fileSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.FILE_DECLARATION:
      {
        FileDeclaration fileDeclaration = (FileDeclaration)theEObject;
        T result = caseFileDeclaration(fileDeclaration);
        if (result == null) result = caseDeclaration(fileDeclaration);
        if (result == null) result = caseCommand(fileDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.FILE_REFERENCE:
      {
        FileReference fileReference = (FileReference)theEObject;
        T result = caseFileReference(fileReference);
        if (result == null) result = caseFile(fileReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.FILE:
      {
        File file = (File)theEObject;
        T result = caseFile(file);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.METAMODEL_SPECIFICATION:
      {
        MetamodelSpecification metamodelSpecification = (MetamodelSpecification)theEObject;
        T result = caseMetamodelSpecification(metamodelSpecification);
        if (result == null) result = caseMetamodel(metamodelSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.METAMODEL_ENTRY:
      {
        MetamodelEntry metamodelEntry = (MetamodelEntry)theEObject;
        T result = caseMetamodelEntry(metamodelEntry);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.ALL_PACKAGE_ENTRY:
      {
        AllPackageEntry allPackageEntry = (AllPackageEntry)theEObject;
        T result = caseAllPackageEntry(allPackageEntry);
        if (result == null) result = caseMetamodelEntry(allPackageEntry);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.METAMODEL_ELEMENT:
      {
        MetamodelElement metamodelElement = (MetamodelElement)theEObject;
        T result = caseMetamodelElement(metamodelElement);
        if (result == null) result = caseMetamodelEntry(metamodelElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.METAMODEL_DECLARATION:
      {
        MetamodelDeclaration metamodelDeclaration = (MetamodelDeclaration)theEObject;
        T result = caseMetamodelDeclaration(metamodelDeclaration);
        if (result == null) result = caseDeclaration(metamodelDeclaration);
        if (result == null) result = caseCommand(metamodelDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.METAMODEL_REFERENCE:
      {
        MetamodelReference metamodelReference = (MetamodelReference)theEObject;
        T result = caseMetamodelReference(metamodelReference);
        if (result == null) result = caseMetamodel(metamodelReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.METAMODEL:
      {
        Metamodel metamodel = (Metamodel)theEObject;
        T result = caseMetamodel(metamodel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.PARTIAL_MODEL_SPECIFICATION:
      {
        PartialModelSpecification partialModelSpecification = (PartialModelSpecification)theEObject;
        T result = casePartialModelSpecification(partialModelSpecification);
        if (result == null) result = casePartialModel(partialModelSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.PARTIAL_MODEL_ENTRY:
      {
        PartialModelEntry partialModelEntry = (PartialModelEntry)theEObject;
        T result = casePartialModelEntry(partialModelEntry);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.MODEL_ENTRY:
      {
        ModelEntry modelEntry = (ModelEntry)theEObject;
        T result = caseModelEntry(modelEntry);
        if (result == null) result = casePartialModelEntry(modelEntry);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.FOLDER_ENTRY:
      {
        FolderEntry folderEntry = (FolderEntry)theEObject;
        T result = caseFolderEntry(folderEntry);
        if (result == null) result = casePartialModelEntry(folderEntry);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.PARTIAL_MODEL_DECLARATION:
      {
        PartialModelDeclaration partialModelDeclaration = (PartialModelDeclaration)theEObject;
        T result = casePartialModelDeclaration(partialModelDeclaration);
        if (result == null) result = caseDeclaration(partialModelDeclaration);
        if (result == null) result = caseCommand(partialModelDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.PARTIAL_MODEL_REFERENCE:
      {
        PartialModelReference partialModelReference = (PartialModelReference)theEObject;
        T result = casePartialModelReference(partialModelReference);
        if (result == null) result = casePartialModel(partialModelReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.PARTIAL_MODEL:
      {
        PartialModel partialModel = (PartialModel)theEObject;
        T result = casePartialModel(partialModel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.PATTERN_SPECIFICATION:
      {
        PatternSpecification patternSpecification = (PatternSpecification)theEObject;
        T result = casePatternSpecification(patternSpecification);
        if (result == null) result = caseGraphPattern(patternSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.PATTERN_ENTRY:
      {
        PatternEntry patternEntry = (PatternEntry)theEObject;
        T result = casePatternEntry(patternEntry);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.ALL_PATTERN_ENTRY:
      {
        AllPatternEntry allPatternEntry = (AllPatternEntry)theEObject;
        T result = caseAllPatternEntry(allPatternEntry);
        if (result == null) result = casePatternEntry(allPatternEntry);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.PATTERN_ELEMENT:
      {
        PatternElement patternElement = (PatternElement)theEObject;
        T result = casePatternElement(patternElement);
        if (result == null) result = casePatternEntry(patternElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.GRAPH_PATTERN_DECLARATION:
      {
        GraphPatternDeclaration graphPatternDeclaration = (GraphPatternDeclaration)theEObject;
        T result = caseGraphPatternDeclaration(graphPatternDeclaration);
        if (result == null) result = caseDeclaration(graphPatternDeclaration);
        if (result == null) result = caseCommand(graphPatternDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.GRAPH_PATTERN_REFERENCE:
      {
        GraphPatternReference graphPatternReference = (GraphPatternReference)theEObject;
        T result = caseGraphPatternReference(graphPatternReference);
        if (result == null) result = caseGraphPattern(graphPatternReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.GRAPH_PATTERN:
      {
        GraphPattern graphPattern = (GraphPattern)theEObject;
        T result = caseGraphPattern(graphPattern);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.CONFIG_SPECIFICATION:
      {
        ConfigSpecification configSpecification = (ConfigSpecification)theEObject;
        T result = caseConfigSpecification(configSpecification);
        if (result == null) result = caseConfig(configSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.CONFIG_DECLARATION:
      {
        ConfigDeclaration configDeclaration = (ConfigDeclaration)theEObject;
        T result = caseConfigDeclaration(configDeclaration);
        if (result == null) result = caseDeclaration(configDeclaration);
        if (result == null) result = caseCommand(configDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.CONFIG_ENTRY:
      {
        ConfigEntry configEntry = (ConfigEntry)theEObject;
        T result = caseConfigEntry(configEntry);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.DOCUMENTATION_ENTRY:
      {
        DocumentationEntry documentationEntry = (DocumentationEntry)theEObject;
        T result = caseDocumentationEntry(documentationEntry);
        if (result == null) result = caseConfigEntry(documentationEntry);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.RUNTIME_ENTRY:
      {
        RuntimeEntry runtimeEntry = (RuntimeEntry)theEObject;
        T result = caseRuntimeEntry(runtimeEntry);
        if (result == null) result = caseConfigEntry(runtimeEntry);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.MEMORY_ENTRY:
      {
        MemoryEntry memoryEntry = (MemoryEntry)theEObject;
        T result = caseMemoryEntry(memoryEntry);
        if (result == null) result = caseConfigEntry(memoryEntry);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.CUSTOM_ENTRY:
      {
        CustomEntry customEntry = (CustomEntry)theEObject;
        T result = caseCustomEntry(customEntry);
        if (result == null) result = caseConfigEntry(customEntry);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.CONFIG_REFERENCE:
      {
        ConfigReference configReference = (ConfigReference)theEObject;
        T result = caseConfigReference(configReference);
        if (result == null) result = caseConfig(configReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.CONFIG:
      {
        Config config = (Config)theEObject;
        T result = caseConfig(config);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.SCOPE_SPECIFICATION:
      {
        ScopeSpecification scopeSpecification = (ScopeSpecification)theEObject;
        T result = caseScopeSpecification(scopeSpecification);
        if (result == null) result = caseScope(scopeSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.TYPE_SCOPE:
      {
        TypeScope typeScope = (TypeScope)theEObject;
        T result = caseTypeScope(typeScope);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.CLASS_TYPE_SCOPE:
      {
        ClassTypeScope classTypeScope = (ClassTypeScope)theEObject;
        T result = caseClassTypeScope(classTypeScope);
        if (result == null) result = caseTypeScope(classTypeScope);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.OBJECT_TYPE_SCOPE:
      {
        ObjectTypeScope objectTypeScope = (ObjectTypeScope)theEObject;
        T result = caseObjectTypeScope(objectTypeScope);
        if (result == null) result = caseTypeScope(objectTypeScope);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.INTEGER_TYPE_SCOPE:
      {
        IntegerTypeScope integerTypeScope = (IntegerTypeScope)theEObject;
        T result = caseIntegerTypeScope(integerTypeScope);
        if (result == null) result = caseTypeScope(integerTypeScope);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.REAL_TYPE_SCOPE:
      {
        RealTypeScope realTypeScope = (RealTypeScope)theEObject;
        T result = caseRealTypeScope(realTypeScope);
        if (result == null) result = caseTypeScope(realTypeScope);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.STRING_TYPE_SCOPE:
      {
        StringTypeScope stringTypeScope = (StringTypeScope)theEObject;
        T result = caseStringTypeScope(stringTypeScope);
        if (result == null) result = caseTypeScope(stringTypeScope);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.TYPE_REFERENCE:
      {
        TypeReference typeReference = (TypeReference)theEObject;
        T result = caseTypeReference(typeReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.CLASS_REFERENCE:
      {
        ClassReference classReference = (ClassReference)theEObject;
        T result = caseClassReference(classReference);
        if (result == null) result = caseTypeReference(classReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.OBJECT_REFERENCE:
      {
        ObjectReference objectReference = (ObjectReference)theEObject;
        T result = caseObjectReference(objectReference);
        if (result == null) result = caseTypeReference(objectReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.INTEGER_REFERENCE:
      {
        IntegerReference integerReference = (IntegerReference)theEObject;
        T result = caseIntegerReference(integerReference);
        if (result == null) result = caseTypeReference(integerReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.REAL_REFERENCE:
      {
        RealReference realReference = (RealReference)theEObject;
        T result = caseRealReference(realReference);
        if (result == null) result = caseTypeReference(realReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.STRING_REFERENCE:
      {
        StringReference stringReference = (StringReference)theEObject;
        T result = caseStringReference(stringReference);
        if (result == null) result = caseTypeReference(stringReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.NUMBER_SPECIFICATION:
      {
        NumberSpecification numberSpecification = (NumberSpecification)theEObject;
        T result = caseNumberSpecification(numberSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.EXACT_NUMBER:
      {
        ExactNumber exactNumber = (ExactNumber)theEObject;
        T result = caseExactNumber(exactNumber);
        if (result == null) result = caseNumberSpecification(exactNumber);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.INTERVALL_NUMBER:
      {
        IntervallNumber intervallNumber = (IntervallNumber)theEObject;
        T result = caseIntervallNumber(intervallNumber);
        if (result == null) result = caseNumberSpecification(intervallNumber);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.INT_ENUMBERATION:
      {
        IntEnumberation intEnumberation = (IntEnumberation)theEObject;
        T result = caseIntEnumberation(intEnumberation);
        if (result == null) result = caseNumberSpecification(intEnumberation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.REAL_ENUMERATION:
      {
        RealEnumeration realEnumeration = (RealEnumeration)theEObject;
        T result = caseRealEnumeration(realEnumeration);
        if (result == null) result = caseNumberSpecification(realEnumeration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.STRING_ENUMERATION:
      {
        StringEnumeration stringEnumeration = (StringEnumeration)theEObject;
        T result = caseStringEnumeration(stringEnumeration);
        if (result == null) result = caseNumberSpecification(stringEnumeration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.SCOPE_DECLARATION:
      {
        ScopeDeclaration scopeDeclaration = (ScopeDeclaration)theEObject;
        T result = caseScopeDeclaration(scopeDeclaration);
        if (result == null) result = caseDeclaration(scopeDeclaration);
        if (result == null) result = caseCommand(scopeDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.SCOPE_REFERENCE:
      {
        ScopeReference scopeReference = (ScopeReference)theEObject;
        T result = caseScopeReference(scopeReference);
        if (result == null) result = caseScope(scopeReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.SCOPE:
      {
        Scope scope = (Scope)theEObject;
        T result = caseScope(scope);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.TASK:
      {
        Task task = (Task)theEObject;
        T result = caseTask(task);
        if (result == null) result = caseCommand(task);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.GENERATION_TASK:
      {
        GenerationTask generationTask = (GenerationTask)theEObject;
        T result = caseGenerationTask(generationTask);
        if (result == null) result = caseTask(generationTask);
        if (result == null) result = caseCommand(generationTask);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.INTEGER_SCOPE:
      {
        IntegerScope integerScope = (IntegerScope)theEObject;
        T result = caseIntegerScope(integerScope);
        if (result == null) result = caseIntegerReference(integerScope);
        if (result == null) result = caseTypeReference(integerScope);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.REAL_SCOPE:
      {
        RealScope realScope = (RealScope)theEObject;
        T result = caseRealScope(realScope);
        if (result == null) result = caseRealReference(realScope);
        if (result == null) result = caseTypeReference(realScope);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ApplicationConfigurationPackage.STRING_SCOPE:
      {
        StringScope stringScope = (StringScope)theEObject;
        T result = caseStringScope(stringScope);
        if (result == null) result = caseStringReference(stringScope);
        if (result == null) result = caseTypeReference(stringScope);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Configuration Script</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Configuration Script</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConfigurationScript(ConfigurationScript object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Command</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Command</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCommand(Command object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Import</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Import</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImport(Import object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPackage Import</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPackage Import</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPackageImport(EPackageImport object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Viatra Import</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Viatra Import</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseViatraImport(ViatraImport object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeclaration(Declaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>File Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>File Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFileSpecification(FileSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>File Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>File Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFileDeclaration(FileDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>File Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>File Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFileReference(FileReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>File</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>File</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFile(File object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Metamodel Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Metamodel Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMetamodelSpecification(MetamodelSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Metamodel Entry</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Metamodel Entry</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMetamodelEntry(MetamodelEntry object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>All Package Entry</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>All Package Entry</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAllPackageEntry(AllPackageEntry object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Metamodel Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Metamodel Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMetamodelElement(MetamodelElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Metamodel Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Metamodel Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMetamodelDeclaration(MetamodelDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Metamodel Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Metamodel Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMetamodelReference(MetamodelReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Metamodel</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Metamodel</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMetamodel(Metamodel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Partial Model Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Partial Model Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePartialModelSpecification(PartialModelSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Partial Model Entry</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Partial Model Entry</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePartialModelEntry(PartialModelEntry object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model Entry</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model Entry</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModelEntry(ModelEntry object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Folder Entry</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Folder Entry</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFolderEntry(FolderEntry object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Partial Model Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Partial Model Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePartialModelDeclaration(PartialModelDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Partial Model Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Partial Model Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePartialModelReference(PartialModelReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Partial Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Partial Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePartialModel(PartialModel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pattern Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pattern Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePatternSpecification(PatternSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pattern Entry</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pattern Entry</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePatternEntry(PatternEntry object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>All Pattern Entry</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>All Pattern Entry</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAllPatternEntry(AllPatternEntry object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pattern Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pattern Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePatternElement(PatternElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Graph Pattern Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Graph Pattern Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGraphPatternDeclaration(GraphPatternDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Graph Pattern Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Graph Pattern Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGraphPatternReference(GraphPatternReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Graph Pattern</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Graph Pattern</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGraphPattern(GraphPattern object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Config Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Config Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConfigSpecification(ConfigSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Config Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Config Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConfigDeclaration(ConfigDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Config Entry</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Config Entry</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConfigEntry(ConfigEntry object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Documentation Entry</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Documentation Entry</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDocumentationEntry(DocumentationEntry object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Runtime Entry</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Runtime Entry</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRuntimeEntry(RuntimeEntry object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Memory Entry</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Memory Entry</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMemoryEntry(MemoryEntry object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Custom Entry</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Custom Entry</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCustomEntry(CustomEntry object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Config Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Config Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConfigReference(ConfigReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Config</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Config</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConfig(Config object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Scope Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Scope Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseScopeSpecification(ScopeSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Type Scope</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Type Scope</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTypeScope(TypeScope object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Class Type Scope</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Class Type Scope</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseClassTypeScope(ClassTypeScope object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object Type Scope</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object Type Scope</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObjectTypeScope(ObjectTypeScope object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integer Type Scope</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integer Type Scope</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegerTypeScope(IntegerTypeScope object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Real Type Scope</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Real Type Scope</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRealTypeScope(RealTypeScope object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Type Scope</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Type Scope</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStringTypeScope(StringTypeScope object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Type Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Type Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTypeReference(TypeReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Class Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Class Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseClassReference(ClassReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObjectReference(ObjectReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integer Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integer Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegerReference(IntegerReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Real Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Real Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRealReference(RealReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStringReference(StringReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Number Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Number Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNumberSpecification(NumberSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Exact Number</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Exact Number</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExactNumber(ExactNumber object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Intervall Number</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Intervall Number</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntervallNumber(IntervallNumber object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Int Enumberation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Int Enumberation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntEnumberation(IntEnumberation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Real Enumeration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Real Enumeration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRealEnumeration(RealEnumeration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Enumeration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Enumeration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStringEnumeration(StringEnumeration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Scope Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Scope Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseScopeDeclaration(ScopeDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Scope Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Scope Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseScopeReference(ScopeReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Scope</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Scope</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseScope(Scope object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Task</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Task</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTask(Task object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Generation Task</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Generation Task</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGenerationTask(GenerationTask object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integer Scope</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integer Scope</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegerScope(IntegerScope object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Real Scope</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Real Scope</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRealScope(RealScope object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Scope</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Scope</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStringScope(StringScope object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //ApplicationConfigurationSwitch
