/**
 * generated by Xtext 2.21.0
 */
package hu.bme.mit.inf.dslreasoner.application.applicationConfiguration.impl;

import hu.bme.mit.inf.dslreasoner.application.applicationConfiguration.ApplicationConfigurationPackage;
import hu.bme.mit.inf.dslreasoner.application.applicationConfiguration.ViatraImport;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.viatra.query.patternlanguage.emf.vql.PatternModel;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Viatra Import</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link hu.bme.mit.inf.dslreasoner.application.applicationConfiguration.impl.ViatraImportImpl#getImportedViatra <em>Imported Viatra</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ViatraImportImpl extends ImportImpl implements ViatraImport
{
  /**
   * The cached value of the '{@link #getImportedViatra() <em>Imported Viatra</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImportedViatra()
   * @generated
   * @ordered
   */
  protected PatternModel importedViatra;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ViatraImportImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ApplicationConfigurationPackage.Literals.VIATRA_IMPORT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PatternModel getImportedViatra()
  {
    if (importedViatra != null && importedViatra.eIsProxy())
    {
      InternalEObject oldImportedViatra = (InternalEObject)importedViatra;
      importedViatra = (PatternModel)eResolveProxy(oldImportedViatra);
      if (importedViatra != oldImportedViatra)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ApplicationConfigurationPackage.VIATRA_IMPORT__IMPORTED_VIATRA, oldImportedViatra, importedViatra));
      }
    }
    return importedViatra;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PatternModel basicGetImportedViatra()
  {
    return importedViatra;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setImportedViatra(PatternModel newImportedViatra)
  {
    PatternModel oldImportedViatra = importedViatra;
    importedViatra = newImportedViatra;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ApplicationConfigurationPackage.VIATRA_IMPORT__IMPORTED_VIATRA, oldImportedViatra, importedViatra));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ApplicationConfigurationPackage.VIATRA_IMPORT__IMPORTED_VIATRA:
        if (resolve) return getImportedViatra();
        return basicGetImportedViatra();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ApplicationConfigurationPackage.VIATRA_IMPORT__IMPORTED_VIATRA:
        setImportedViatra((PatternModel)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ApplicationConfigurationPackage.VIATRA_IMPORT__IMPORTED_VIATRA:
        setImportedViatra((PatternModel)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ApplicationConfigurationPackage.VIATRA_IMPORT__IMPORTED_VIATRA:
        return importedViatra != null;
    }
    return super.eIsSet(featureID);
  }

} //ViatraImportImpl
